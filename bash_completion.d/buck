#!/bin/bash

_resolve_cell() {
  tdir="${1#//*}"
  if [[ "$tdir" == *"//"* ]]; then
    root=$(hg root)
    cell="${tdir%//*}"
    if [[ "$cell" == "fbsource" ]]; then
      tdir="$root"/"${tdir#*//*}"
    else
      tdir="$root"/"$cell"/"${tdir#*//*}"
    fi
  fi
  echo "$tdir"
}

_find_file_matches() {
  cur="$1"
  prefix="$2"
  ret=1

  if [[ "$cur" == *"/"* ]]; then
    local stem="${cur%/*}"/
  else
    local stem=""
  fi
  path="$(_resolve_cell "$cur")"

  paths="$(find "$path"* -maxdepth 1 -type f 2> /dev/null)"
  for p in $paths; do
    local end="${p#$stem}"
    ret=0
    echo "$prefix$stem$end"
  done

  return $ret
}

_find_dir_matches() {
  cur="$1"
  prefix="$2"
  ret=1

  if [[ "$cur" == *"/"* ]]; then
    local stem="${cur%/*}"/
  else
    local stem=""
  fi
  path="$(_resolve_cell "$cur")"

  paths=( $(find "$path"* -maxdepth 0 -type d 2> /dev/null) )
  if [[ "${#paths[@]}" == 1 ]]; then
    paths=( $(find "$path"* -maxdepth 1 -type d 2> /dev/null) )
  fi
  for p in ${paths[@]}; do
    local end="${p#$stem}"
    ret=0
    echo "$prefix$stem$end"/
  done

  return $ret
}

_buck_completion() {
  if [[ "${BASH_VERSION:0:1}" -gt "3" ]] ; then
    local prev="${COMP_WORDS[$((COMP_CWORD - 1))]}"
    local cur="${COMP_WORDS[COMP_CWORD]}"
    if [[ "$prev" == "buck" ]]; then
      COMPREPLY=( $(compgen -W 'audit autodeps build cache clean distbuild \
                                doctor fetch help install machoutils project \
                                publish query rage root run server suggest \
                                targets test uninstall verify-caches' -- "$cur") )
    else
      if [[ "$prev" == "@" ]]; then
        COMPREPLY=( $(_find_file_matches "$cur" "@") )
      elif [[ "${cur:0:1}" == "@" ]]; then
        COMPREPLY=( $(_find_file_matches "${cur:1}" "@") )
      elif [[ "$cur" == ":" || "$prev" == ":" ]]; then
        if [[ -z "$2" ]] ; then
          local delta=1
        else
          local delta=2
        fi
        local tdir="$(_resolve_cell ${COMP_WORDS[$((COMP_CWORD - $delta))]})"
        if [[ -f "$tdir"/BUCK ]] ; then
          COMPREPLY=($(sed -n "s/ *name *= *['\"]\($2[a-zA-Z0-9_-]*\)['\"].*/\1/gp" "$tdir/BUCK"))
        elif [[ -f "$tdir"/TARGETS ]] ; then
          COMPREPLY=($(sed -n "s/ *name *= *['\"]\($2[a-zA-Z0-9_-]*\)['\"].*/\1/gp" "$tdir/TARGETS"))
        fi
      else
          COMPREPLY=( $(_find_dir_matches "$cur" "") )
      fi
    fi
  fi
}

complete -o dirnames -F _buck_completion buck
complete -o dirnames -F _buck_completion buck-beta
