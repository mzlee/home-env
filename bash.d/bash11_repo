# .bash_functions repo submodule

function _repo_type
{
    local d;
    d=$PWD;
    while :; do
        if test -d "$d/.git"; then
            # git=$d;
            echo git
            break;
        elif test -d "$d/.hg"; then
            # hg=$d;
            echo hg
            break;
        elif test -d "$d/.svn"; then
            # svn=$d
            echo svn
            break;
        fi;
        test "$d" = / && break;
        d=$(cd "$d/.." && echo "$PWD");
    done;
}

function r
{
    ${REPO} "${@}"
}

function repo_commit
{
    case $(_repo_type) in
	git)
	    local BASE_DIR=$(git rev-parse --show-toplevel 2> /dev/null)
	    local OBJ=${PWD#${BASE_DIR}}/${1}
	    local OBJ=${OBJ#/}
	    if [ -n "${OBJ}" ]; then
		__git_commit ${OBJ}
	    fi
	    ;;
	svn)
	    local OBJ=${1}
	    if [ -n "${OBJ}" ]; then
		__svn_commit ${OBJ}
	    fi
	    ;;
	*)
	    echo "No valid repository found"
	    return 255
	    ;;
    esac
}

function repo_status
{
    TARGET=${1}
    if [ -z ${TARGET} ]; then
	TARGET=.
    fi
    pushd ${TARGET} > /dev/null
    case $(_repo_type) in
	git)
	    git fetch
	    git status
	    ;;
	svn)
	    svn st
	    ;;
	*)
	    echo "No valid repository found"
    esac
    popd > /dev/null
}

function repo_push
{
    TARGET=${1}
    if [ -z ${TARGET} ]; then
	TARGET=.
    fi
    pushd ${TARGET} > /dev/null
    case $(_repo_type) in
	git)
	    git pull --rebase
	    git push
	    ;;
	svn)
	    ## This is a no-op
	    true
	    ;;
	*)
	    echo "No valid repository found"
    esac
    popd > /dev/null
}

function repo_pull
{
    TARGET=${1}
    if [ -z ${TARGET} ]; then
	TARGET=.
    fi
    pushd ${TARGET} > /dev/null
    case $(_repo_type) in
	git)
	    git pull --rebase
	    ;;
	svn)
	    svn up
	    ;;
	*)
	    echo "No valid repository found"
    esac
    popd > /dev/null
}

function repo_revert
{
    TARGET=${1}
    if [ -z ${TARGET} ]; then
	TARGET=.
    fi
    pushd ${TARGET} > /dev/null
    case $(_repo_type) in
	git)
	    git reset ${TARGET}
	    git co ${TARGET}
	    ;;
	svn)
	    svn revert ${TARGET}
	    ;;
	*)
	    echo "No valid repository found"
    esac
    popd > /dev/null
}

function repo
{
    CMD=${1}
    shift
    case ${CMD} in
	st|status)
	    repo_status ${@}
	    ;;
	ci|commit)
	    repo_commit ${@}
	    ;;
	push)
	    repo_push ${@}
	    ;;
	pull)
	    repo_pull ${@}
	    ;;
	co|checkout|revert)
	    repo_revert ${@}
	    ;;
	*)
	    echo "repo <cmd> [args]"
	    echo -e "\tcommit"
	    echo -e "\tpull"
	    echo -e "\tpush"
	    echo -e "\trevert"
	    echo -e "\tstatus"
	    ;;
    esac
}


function __git_commit
{
    local OBJ=${1}
    echo -n "Message? "
    read message
    if [ -z "${message}" ]; then
	echo "No commit message, aborting"
	return 255
    fi
    git add ${OBJ}
    git ci -m "[${OBJ}] ${message}"
}

function __svn_commit
{
    local OBJ=${1}
    echo -n "Message? "
    read message
    if [ -z "${message}" ]; then
	echo "No commit message, aborting"
	return 255
    fi
    svn ci ${OBJ} -m "[${OBJ}] ${message}"
}
