## Bash Colors

if [ -f ${HOME}/.dircolors ]; then
    eval $(dircolors ${HOME}/.dircolors)
fi

function _powerline_ps1 {
    local err=${?}
    local d=$(_repo_dir)
    if [ -n "${d}" ]; then
        local r=$(_repo_type "${d}")
        local br="$(_repo_info ${d} ${r})"
        export PS1="$(python3 ~/.home_env/powerline-bash.py --error=${err} --branch="${br}" --mode=patched)"
        export REPO="${r}"
    else
        export PS1="$(python3 ~/.home_env/powerline-bash.py --error=${err} --mode=patched)"
    fi
}

function _powerline_ps1_compat {
    local err=${?}
    local d=$(_repo_dir)
    if [ -n "${d}" ]; then
        local r=$(_repo_type "${d}")
        local br="$(_repo_info ${d} ${r})"
        export PS1="$(python3 ~/.home_env/powerline-bash.py --error=${err} --branch="${br}" --mode=compatible)"
        export REPO="${r}"
    else
        export PS1="$(python3 ~/.home_env/powerline-bash.py --error=${err} --mode=compatible)"
    fi
}

function set_powerline {
    export PROMPT_COMMAND=_powerline_ps1
}

function set_powerline_compat {
    export PROMPT_COMMAND=_powerline_ps1_compat
}

export PROMPT_COMMAND="_powerline_ps1"
